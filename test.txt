<!DOCTYPE html>
<html>
<head>
    <title>Status Graph</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        #graph {
            width: 800px;
            height: 400px;
            margin: 50px auto;
        }
    </style>
</head>
<body>
    <div id="graph"></div>

    <script>
        // Fetch data from the server-side variable
        var data = {{ data | safe }};

        // Extract unique URLs
        var urls = [...new Set(data.map(item => item.url))];

        // Initialize an empty list for traces
        var traces = [];

        // Define the marker symbols for Pass and Fail status
        var passSymbol = 'circle';
        var failSymbol = 'x';

        // Loop through each URL and create a trace
        urls.forEach(url => {
            // Filter data for the current URL
            var filteredData = data.filter(item => item.url === url);

            // Create an object to store the count of data points for each timestamp
            var countMap = {};

            // Calculate the count of data points for each timestamp
            filteredData.forEach(item => {
                var timestamp = item.timestamp;
                countMap[timestamp] = (countMap[timestamp] || 0) + 1;
            });

            // Extract x and y values from the filtered data
            var x = filteredData.map(item => item.timestamp);
            var y = filteredData.map(item => item.status === "Pass" ? passSymbol : failSymbol);

            // Adjust marker size and opacity based on the count of data points at the same timestamp
            var markerSize = x.map(timestamp => 10 / Math.sqrt(countMap[timestamp]));
            var markerOpacity = x.map(timestamp => 1 / Math.sqrt(countMap[timestamp]));

            // Create the trace for the current URL
            var trace = {
                x: x,
                y: y,
                mode: 'markers',
                marker: {
                    size: markerSize,
                    opacity: markerOpacity,
                    symbol: y,
                },
                text: x.map((timestamp, index) => `${url}<br>Status: ${y[index]}<br>Timestamp: ${timestamp}`),
                hovertemplate: '%{text}<extra></extra>',
                name: url,
            };

            // Add the trace to the list
            traces.push(trace);
        });

        // Set the layout options
        var layout = {
            title: 'Status Graph',
            xaxis: {
                type: 'date',
                tickformat: '%Y-%m-%d %H:%M:%S',
                range: [data[0].timestamp, data[data.length - 1].timestamp],
            },
            yaxis: {
                tickformat: '',
            },
            hovermode: 'closest',
        };

        // Create the plot
        Plotly.newPlot('graph', traces, layout);

        // Make the y-axis scrollable
        var graphDiv = document.getElementById('graph');
        graphDiv.onwheel = function(event) {
            var xaxis = graphDiv._fullLayout.xaxis;
            var range = xaxis.range;
            var span = range[1] - range[0];
            var scrollAmount = event.deltaY * span / graphDiv.clientWidth;
            var newRange = [range[0] + scrollAmount, range[1] + scrollAmount];
            Plotly
