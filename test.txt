from configparser import ConfigParser
from jira import JIRA

def before_all(context):
    # Read the configuration from behave.ini
    config = ConfigParser()
    config.read('behave.ini')

    # Get the Jira configuration values
    jira_url = config.get('Jira', 'url')
    jira_username = config.get('Jira', 'username')
    jira_password = config.get('Jira', 'password')
    
    # Initialize JIRA client
    jira = JIRA(server=jira_url, basic_auth=(jira_username, jira_password))
    
    # Rest of the code to create a new cycle and attach test cases
    cycle_name = "New Cycle"
    label = "specific_label"
    test_cases = jira.search_issues('labels = "{}"'.format(label))
    cycle = jira.create_cycle(name=cycle_name, project_id="project_id", version_id="version_id")
    for test_case in test_cases:
        jira.add_tests_to_cycle(cycle_id=cycle.id, issue_ids=[test_case.id])

def after_scenario(context, scenario):
    # Read the configuration from behave.ini
    config = ConfigParser()
    config.read('behave.ini')

    # Get the Jira configuration values
    jira_url = config.get('Jira', 'url')
    jira_username = config.get('Jira', 'username')
    jira_password = config.get('Jira', 'password')
    
    # Initialize JIRA client
    jira = JIRA(server=jira_url, basic_auth=(jira_username, jira_password))
    
    # Rest of the code to update the pass/fail status of the scenario in Jira
    test_case_id = context.test_case['id']
    test_case_status = "Pass" if scenario.status == "passed" else "Fail"
    
    # Update the test case status in Jira
    jira.update_test_result(test_issue_key=test_case_id, status=test_case_status)
