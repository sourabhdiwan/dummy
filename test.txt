from allure_commons._allure import step, attach
from allure_commons.types import AttachmentType
from behave import given, then

@given('"{feed_field}" is "{feed_value}"')
def step_given_feed_field(context, feed_field, feed_value):
    context.feed_data[feed_field] = feed_value

@given('"{db_field}" is "{db_value}" in the database')
def step_given_db_field(context, db_field, db_value):
    # Assume there is a database connection and logic to retrieve the value from the database
    context.db_data[db_field] = db_value

@then('the length of "{feed_field}" should be equal to the length of "{db_field}"')
def step_then_compare_lengths(context, feed_field, db_field):
    feed_value = context.feed_data[feed_field]
    db_value = context.db_data[db_field]

    feed_length = len(feed_value)
    db_length = len(db_value)

    if feed_length == db_length:
        with step(f"Compare Lengths: {feed_field} and {db_field}"):
            step_msg = f"{feed_field} Length: {feed_length}\n{db_field} Length: {db_length}\nComparison Result: Passed"
            attach(step_msg, name="Comparison Result", attachment_type=AttachmentType.TEXT)
    else:
        with step(f"Compare Lengths: {feed_field} and {db_field}"):
            step_msg = f"{feed_field} Length: {feed_length}\n{db_field} Length: {db_length}\nComparison Result: Failed"
            attach(step_msg, name="Comparison Result", attachment_type=AttachmentType.TEXT)
            assert feed_length == db_length, f"Lengths do not match. {feed_field} Length: {feed_length}, {db_field} Length: {db_length}"
